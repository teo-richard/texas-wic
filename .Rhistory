#   if (clinic[["by_id"]] == FALSE & clinic[["by_name"]] == FALSE & clinic[["by_addr"]]== FALSE) {
#
#     if (clinic[["manual_date_change"]] & !is.na(clinic[["manual_date_change"]])) {
#       found_idx = which(old_pared[["siteid"]] == clinic[["siteid"]])
#       if (length(found_idx) > 0) {
#         cat("Clinic", i, "- Removing rows:", length(found_idx), "\n")
#         old_pared = old_pared[-found_idx, ]
#         final[i, ]$checked = TRUE
#       } else {
#         next
#       }
#
#     }
#   } else{
#     next
#   }
# }
lgcl_removal_single_column = function(data, column) {
for (i in 1:nrow(data)) {
clinic = data[i, ]
if (clinic[["by_id"]] == FALSE & clinic[["by_name"]] == FALSE & clinic[["by_addr"]]== FALSE) {
if (clinic[[column]] & !is.na(clinic[[column]])) {
found_idx = which(old_pared[["siteid"]] == clinic[["siteid"]])
if (length(found_idx) > 0) {
cat("Clinic", i, "- Removing rows:", length(found_idx), "\n")
old_pared = old_pared[-found_idx, ]
data[i, ]$checked = TRUE
} else {
next
}
}
} else{
next
}
}
}
lgcl_removal_single_column(final, bad_zipcode)
lgcl_removal_single_column(final, manual_date_change)
mmf = manual_matched_finalized
final = mmf %>% mutate(checked = FALSE)
matchers = setNames(c("siteid_zip", "name_zip_county", "addr_zip_county"),
c("by_id", "by_name", "by_addr" ))
i = 22
old_pared = old
skipped_clinics = list()
# For each clinic
# Removing based on **match keys**
for (i in 1:nrow(final)) {
skip_to_next_clinic = FALSE
clinic = final[i, ]
# For each matcher in matchers
for (matcher_name in names(matchers)) {
matcher_column = matchers[[matcher_name]]
matcher_value = clinic[[matcher_column]]
if (clinic[[matcher_name]] == FALSE) { # If no match was found
next
} else { # If a match was found for the matcher we're on in the iteration
skip_to_next_clinic = TRUE
# Find the idx and delete from `old_pared`
old_value = as.character(old_pared[[matcher_column]])
found_idx = which(old_value == matcher_value)
# Tracking for reference how I'm dropping clinics:
cat("n rows old pared:", nrow(old_pared), "\n")
cat("Clinic", i, "- Matcher:", matcher_name, "- Removing rows:", length(found_idx), "\n")
if (length(found_idx) > 0) {
old_pared = old_pared[-found_idx, ]
final[i, ]$checked = TRUE
} else{
skipped_clinics = append(skipped_clinics, i)
}
break
}
}
}
# Looking at skipped_clinics manually
# They look to be duplicates of each other (i.e. one clinic closed and another reopened but they both show up in this dataset)
mmf = mmf %>% mutate(f_name = new$f_name, f_addr = new$f_addr)
which(duplicated(mmf$f_addr) & duplicated(mmf$zipcode))
which(duplicated(mmf$f_addr, fromLast = TRUE) & duplicated(mmf$zipcode, fromLast = TRUE))
mmf[21, ]
mmf[22, ]
mmf[210,]
mmf[211,]
# Removing based on **bad zipcode**
for (i in 1:nrow(final)) {
clinic = final[i, ]
if (clinic[["by_id"]] == FALSE & clinic[["by_name"]] == FALSE & clinic[["by_addr"]]== FALSE) {
if (clinic[["bad_zipcode"]] == TRUE) {
found_idx = which(old_pared[["siteid"]] == clinic[["siteid"]])
if (length(found_idx) > 0) {
cat("Clinic", i, "- Removing rows:", length(found_idx), "\n")
old_pared = old_pared[-found_idx, ]
final[i, ]$checked = TRUE
} else {
next
}
}
} else{
next
}
}
# Removing based on **manual date changes**
# Removing based on **bad zipcode**
for (i in 1:nrow(final)) {
clinic = final[i, ]
if (clinic[["by_id"]] == FALSE & clinic[["by_name"]] == FALSE & clinic[["by_addr"]]== FALSE) {
if (clinic[["manual_date_change"]] & !is.na(clinic[["manual_date_change"]])) {
found_idx = which(old_pared[["siteid"]] == clinic[["siteid"]])
if (length(found_idx) > 0) {
cat("Clinic", i, "- Removing rows:", length(found_idx), "\n")
old_pared = old_pared[-found_idx, ]
final[i, ]$checked = TRUE
} else {
next
}
}
} else{
next
}
}
final %>% filter(manual_date_change == TRUE)
final %>% filter(manual_date_change == TRUE) %>% filter(check == FALSE)
final %>% filter(manual_date_change == TRUE) %>% filter(check == FALSE)
final
final %>% filter(manual_date_change == TRUE) %>% filter(checked == FALSE)
mmf = manual_matched_finalized
final = mmf %>% mutate(dropped = FALSE)
matchers = setNames(c("siteid_zip", "name_zip_county", "addr_zip_county"),
c("by_id", "by_name", "by_addr" ))
i = 22
old_pared = old
skipped_clinics = list()
# For each clinic
# Removing based on **match keys**
for (i in 1:nrow(final)) {
skip_to_next_clinic = FALSE
clinic = final[i, ]
# For each matcher in matchers
for (matcher_name in names(matchers)) {
matcher_column = matchers[[matcher_name]]
matcher_value = clinic[[matcher_column]]
if (clinic[[matcher_name]] == FALSE) { # If no match was found
next
} else { # If a match was found for the matcher we're on in the iteration
skip_to_next_clinic = TRUE
# Find the idx and delete from `old_pared`
old_value = as.character(old_pared[[matcher_column]])
found_idx = which(old_value == matcher_value)
# Tracking for reference how I'm dropping clinics:
cat("n rows old pared:", nrow(old_pared), "\n")
cat("Clinic", i, "- Matcher:", matcher_name, "- Removing rows:", length(found_idx), "\n")
if (length(found_idx) > 0) {
old_pared = old_pared[-found_idx, ]
final[i, ]$dropped = TRUE
} else{
skipped_clinics = append(skipped_clinics, i)
}
break
}
}
}
# Looking at skipped_clinics manually
# They look to be duplicates of each other (i.e. one clinic closed and another reopened but they both show up in this dataset)
mmf = mmf %>% mutate(f_name = new$f_name, f_addr = new$f_addr)
which(duplicated(mmf$f_addr) & duplicated(mmf$zipcode))
which(duplicated(mmf$f_addr, fromLast = TRUE) & duplicated(mmf$zipcode, fromLast = TRUE))
mmf[21, ]
mmf[22, ]
mmf[210,]
mmf[211,]
# Removing based on **bad zipcode**
for (i in 1:nrow(final)) {
clinic = final[i, ]
if (clinic[["by_id"]] == FALSE & clinic[["by_name"]] == FALSE & clinic[["by_addr"]]== FALSE) {
if (clinic[["bad_zipcode"]] == TRUE) {
found_idx = which(old_pared[["siteid"]] == clinic[["siteid"]])
if (length(found_idx) > 0) {
cat("Clinic", i, "- Removing rows:", length(found_idx), "\n")
old_pared = old_pared[-found_idx, ]
final[i, ]$dropped = TRUE
} else {
next
}
}
} else{
next
}
}
# Removing based on **manual date changes**
# Removing based on **bad zipcode**
for (i in 1:nrow(final)) {
clinic = final[i, ]
if (clinic[["by_id"]] == FALSE & clinic[["by_name"]] == FALSE & clinic[["by_addr"]]== FALSE) {
if (clinic[["manual_date_change"]] & !is.na(clinic[["manual_date_change"]])) {
found_idx = which(old_pared[["siteid"]] == clinic[["siteid"]])
if (length(found_idx) > 0) {
cat("Clinic", i, "- Removing rows:", length(found_idx), "\n")
old_pared = old_pared[-found_idx, ]
final[i, ]$dropped = TRUE
} else {
next
}
}
} else{
next
}
}
final %>% filter(manual_date_change == TRUE) %>% filter(checked == FALSE)
old_pared
final %>% filter(manual_date_change == TRUE) %>% filter(dropped == FALSE)
final %>% filter(dropped == FALSE)
final %>% filter(dropped == FALSE) %>% filter(!is.na(fixed_date_open))
final %>% filter(dropped == FALSE) %>% filter(!is.na(fixed_date_open)) %>%
filter(bad_zipcode = TRUE)
final %>% filter(dropped == FALSE) %>% filter(!is.na(fixed_date_open)) %>%
filter(bad_zipcode = TRUE) %>% filter(manual_date_change = FALSE)
final %>% filter(dropped == FALSE) %>% filter(!is.na(fixed_date_open)) %>%
filter(bad_zipcode = TRUE) %>% filter(is.na(manual_date_change))
final %>% filter(dropped == FALSE) %>% filter(!is.na(fixed_date_open)) %>%
filter(bad_zipcode = TRUE)
final %>% filter(dropped == FALSE) %>% filter(!is.na(fixed_date_open)) %>%
filter(manual_date_change = TRUE)
final %>% filter(dropped == FALSE) %>% filter(!is.na(fixed_date_open)) %>%
filter(manual_date_change = TRUE)
old_pared %>% filter(siteid == "9003")
old %>% filter(siteid == "9003")
final %>% filter(dropped == FALSE) %>% filter(!is.na(fixed_date_open)) %>%
filter(manual_date_change = TRUE)
old_pared %>% filter(siteid == "13126")
old %>% filter(siteid == "13126")
final %>% filter(dropped == FALSE) %>% filter(!is.na(fixed_date_open)) %>%
filter(manual_date_change = TRUE)
old_pared %>% filter(siteid == "7716")
old %>% filter(siteid == "7716")
final %>% filter(dropped == FALSE) %>% filter(!is.na(fixed_date_open)) %>%
filter(manual_date_change = TRUE)
old_pared
final %>% filter(dropped == FALSE) %>% filter(!is.na(fixed_date_open)) %>%
filter(manual_date_change = TRUE)
old_pared %>% filter(siteid == "4210")
old %>% filter(siteid == "7716")
old %>% filter(siteid == "4210")
final_mdc = final %>% filter(dropped == FALSE) %>% filter(!is.na(fixed_date_open)) %>%
filter(manual_date_change = TRUE)
dups = list()
for (i in 1:nrow(final_mdc)) {
siteid = final_mdc[i, ]$siteid
idx = which(final$siteid = siteid)
if (old_pared$siteid == siteid & old$siteid == siteid) {
dups = append(dups, idx)
}
}
for (i in 1:nrow(final_mdc)) {
siteid = final_mdc[i, ]$siteid
idx = which(final$siteid == siteid)
if (old_pared$siteid == siteid & old$siteid == siteid) {
dups = append(dups, idx)
}
}
if (old_pared$siteid == siteid) & (old$siteid == siteid) {
dups = append(dups, idx)
}
for (i in 1:nrow(final_mdc)) {
siteid = final_mdc[i, ]$siteid
idx = which(final$siteid == siteid)
if (old_pared$siteid == siteid) & (old$siteid == siteid) {
dups = append(dups, idx)
}
}
for (i in 1:nrow(final_mdc)) {
siteid = final_mdc[i, ]$siteid
idx = which(final$siteid == siteid)
if ((old_pared$siteid == siteid) & (old$siteid == siteid)) {
dups = append(dups, idx)
}
}
dups = list()
for (i in 1:nrow(final_mdc)) {
siteid = final_mdc[i, ]$siteid
idx = which(final$siteid == siteid)
if (old_pared$siteid == siteid & old$siteid == siteid) {
dups = append(dups, idx)
}
}
siteid
ld_pared$siteid
old_pared$siteid
dups = list()
for (i in 1:nrow(final_mdc)) {
siteid = final_mdc[i, ]$siteid
idx = which(final$siteid == siteid)
if (any(old_pared$siteid == siteid) & any(old$siteid == siteid)) {
dups = append(dups, idx)
}
}
dups
final_mdc
old %>% filter(siteid == "4210")
i = 1
siteid = final_mdc[i, ]$siteid
siteid
idx = which(final$siteid == siteid)
idx
any(old_pared$siteid == siteid)
old_pared %>% filter(siteid == "4210")
old_pared %>% filter(siteid == "1001")
siteid
final_mdc = final %>% filter(dropped == FALSE) %>% filter(!is.na(fixed_date_open)) %>%
filter(manual_date_change = TRUE)
final_mdc
old_pared %>% filter(siteid == "7716")
final_mdc = final %>% filter(dropped == FALSE) %>% filter(!is.na(fixed_date_open)) %>%
filter(manual_date_change = TRUE)
final_mdc
old %>% filter(siteid == "1001")
old_pared %>% filter(siteid == "1001")
dups = list()
for (i in 1:nrow(final_mdc)) {
siteid = final_mdc[i, ]$siteid
idx = which(final$siteid == siteid)
if (any(old$siteid == siteid)) {
dups = append(dups, idx)
}
}
dups
dups == skipped_clinics
dups
skipped_clinics
unlist(dups) == unlist(skipped_clinics)
final_mdc
final_mdc_true = final_mdc %>% filter(!is.na(manual_date_change))
= final_mdc %>% filter(!is.na(manual_date_change))
final_mdc_true
final_mdc %>% filter(!is.na(manual_date_change)) %>% filter(bad_zipcode == FALSE)
final_mdc %>% filter(!is.na(manual_date_change)) %>% filter(bad_zipcode == T)
final_mdc_true = final_mdc %>% filter(!is.na(manual_date_change))
final_mdc_true
nrow(final %>% filter(!is.na(fixed_date_open)))
940-425
nrow(old_pared)
nrow(final %>% filter(dropped = TRUE))
final
nrow(final %>% filter(dropped == TRUE))
465-404
final_mdc_true
old_pared %>% filter(grepl("ibu", name))
old_pared %>% filter(grepl("lbu", name))
# These ones I'd changed manually but didn't track the zip codes of the clinic in the old dataset I got them from :/
final_mdc_true = final_mdc %>% filter(!is.na(manual_date_change))
final_mdc_true
old_pared %>% filter(grepl("dallas", city))
final_mdc_true
old_pared %>% filter(grepl("albany", name))
# So I'll look for them manually...
final_mdc_true
old_pared %>% filter(grepl("albany", name))
final_mdc_true
old_pared %>% filter(grepl("hamilton", name))
# So I'll look for them manually...
final_mdc_true
# So I'll look for them manually...
final_mdc_true
old_pared %>% filter(grepl("caldwell", name))
# So I'll look for them manually...
final_mdc_true
# So I'll look for them manually...
final_mdc_true
old_pared %>% filter(grepl("caldwell", name))
# So I'll look for them manually...
final_mdc_true
# So I'll look for them manually...
final_mdc_true
old_pared %>% filter(grepl("atacosa", name))
# So I'll look for them manually...
final_mdc_true
old_pared %>% filter(grepl("atacosa", county_name))
old_pared %>% filter(grepl("atacosa", county))
# So I'll look for them manually...
final_mdc_true
# So I'll look for them manually...
final_mdc_true %>% slice(8)
# So I'll look for them manually...
final_mdc_true %>% slice(1:8)
old_pared %>% filter(grepl("atacosa", county)) %>% slice(1:8)
old_pared %>% filter(grepl("atacosa", name)) %>% slice(1:8)
# So I'll look for them manually...
final_mdc_true %>% slice(1:8)
old_pared %>% filter(grepl("atacosa", county)) %>% slice(1:8)
# So I'll look for them manually...
final_mdc_true %>% slice(1:8)
old_pared %>% filter(grepl("jourdanton", city)) %>% slice(1:8)
# So I'll look for them manually...
final_mdc_true %>% slice(1:8)
old_pared %>% filter(grepl("jourdanton", city)) %>% slice(1:8)
# So I'll look for them manually...
final_mdc_true %>% slice(1:8)
# So I'll look for them manually...
final_mdc_true %>% slice(1:8)
old_pared %>% filter(grepl("patricio", name)) %>% slice(1:8)
# So I'll look for them manually...
final_mdc_true %>% slice(1:8)
old_pared %>% filter(grepl("nueces", county_name)) %>% slice(1:8)
names(old_pared)
old_pared %>% filter(grepl("nueces", COUNTY)) %>% slice(1:8)
# So I'll look for them manually...
final_mdc_true %>% slice(1:8)
old_pared %>% filter(grepl("liberty", name)) %>% slice(1:8)
# So I'll look for them manually...
final_mdc_true %>% slice(1:8)
old_pared %>% filter(grepl("liberty", city)) %>% slice(1:8)
# So I'll look for them manually...
final_mdc_true %>% slice(1:8)
# So I'll look for them manually...
final_mdc_true %>% slice(8:15)
old_pared %>% filter(grepl("llano", city)) %>% slice(8:15)
# So I'll look for them manually...
final_mdc_true %>% slice(8:15)
old_pared %>% filter(grepl("llano", name)) %>% slice(8:15)
# So I'll look for them manually...
final_mdc_true %>% slice(8:15)
old_pared %>% filter(grepl("marble", name)) %>% slice(8:15)
# So I'll look for them manually...
final_mdc_true %>% slice(8:15)
old_pared %>% filter(grepl("marble", city)) %>% slice(8:15)
# So I'll look for them manually...
final_mdc_true %>% slice(8:15)
old_pared %>% filter(grepl("lee", name)) %>% slice(8:15)
# So I'll look for them manually...
final_mdc_true %>% slice(8:15)
old_pared %>% filter(grepl("wheeler", name)) %>% slice(8:15)
# So I'll look for them manually...
final_mdc_true %>% slice(8:15)
old_pared %>% filter(grepl("clarendon", name)) %>% slice(8:15)
# So I'll look for them manually...
final_mdc_true %>% slice(8:15)
old_pared %>% filter(grepl("padu", name)) %>% slice(8:15)
# So I'll look for them manually...
final_mdc_true %>% slice(8:15)
old_pared %>% filter(grepl("lub", name)) %>% slice(8:15)
# So I'll look for them manually...
final_mdc_true %>% slice(8:15)
# So I'll look for them manually...
final_mdc_true %>% slice(15:19)
old_pared %>% filter(grepl("asp", name))
old_pared %>% filter(grepl("asp", name)) %>% slice(15:19)
# Can't find (rows already dropped by another clinic):
cant_find_siteids = c("9003", "6411", "5111", "4210", "13172", "13161", "11002", "13020", "13025", "13124", "13018")
drop_ids = c("7626", "7626", "13306")
old_pared %>% filter(grepl("asp", name)) %>% slice(15:19)
# So I'll look for them manually...
final_mdc_true
old_pared %>% filter(grepl("patr", name))
# So I'll look for them manually...
final_mdc_true
old_pared %>% filter(grepl("liberty", name))
# So I'll look for them manually...
final_mdc_true
old_pared %>% filter(grepl("llano", name))
# So I'll look for them manually...
final_mdc_true
old_pared %>% filter(grepl("llano", name))
# So I'll look for them manually...
final_mdc_true
old_pared %>% filter(grepl("llano", name))
old %>% filter(grepl("llano", name))
# So I'll look for them manually...
final_mdc_true
old_pared %>% filter(grepl("llano", name))
# So I'll look for them manually...
final_mdc_true
old %>% filter(grepl("llano", name))
# So I'll look for them manually...
final_mdc_true
old_pared %>% filter(grepl("llano", name))
# So I'll look for them manually...
final_mdc_true
old_pared %>% filter(grepl("marble", name))
# So I'll look for them manually...
final_mdc_true
old_pared %>% filter(grepl("marble", name))
old %>% filter(grepl("marble", name))
# So I'll look for them manually...
final_mdc_true
# So I'll look for them manually...
final_mdc_true
old_pared %>% filter(grepl("marble", name))
final_mdc_true
# Can't find (rows already dropped by another clinic):
cant_find_siteids = c("9003", "6411", "5111", "4210", "")
# So I'll look for them manually...
final_mdc_true %>% slice(10:19)
old_pared %>% filter(grepl("lee", name))
# So I'll look for them manually...
final_mdc_true %>% slice(10:19)
old_pared %>% filter(grepl("lee", name))
# So I'll look for them manually...
final_mdc_true %>% slice(10:19)
old_pared %>% filter(grepl("lee", name))
# So I'll look for them manually...
final_mdc_true %>% slice(10:19)
old_pared %>% filter(grepl("lee", name))
# So I'll look for them manually...
final_mdc_true %>% slice(10:19)
old_pared %>% filter(grepl("wheeler", name))
# So I'll look for them manually...
final_mdc_true %>% slice(10:19)
old_pared %>% filter(grepl("wheeler", name))
# So I'll look for them manually...
final_mdc_true %>% slice(10:19)
# Can't find (rows already dropped by another clinic):
new %>% filter(siteid == "7717")
print("hi")
